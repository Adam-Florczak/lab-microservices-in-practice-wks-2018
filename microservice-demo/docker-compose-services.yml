version: '3'
services:

  catalog:
    image: ms-wks/catalog-service
    restart: on-failure:10
    depends_on:
      - catalogdb
    networks:
      - ms-wks
    expose:
     - 8080
    ports:
     - 8081:8080
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s

  catalogdb:
    image: mysql:8.0
    # container_name: catalogdb
    networks:
      - ms-wks
    environment:
      - MYSQL_ROOT_PASSWORD=dbpass
      - MYSQL_DATABASE=items
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s

  customer:
    image: ms-wks/customer-service
    restart: on-failure:10
    depends_on:
      - customerdb
    networks:
      - ms-wks
    expose:
     - 8080
    ports:
     - 8082:8080
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s

  customerdb:
    image: mysql:8.0
    # container_name: customerdb
    networks:
      - ms-wks
    environment:
      - MYSQL_ROOT_PASSWORD=dbpass
      - MYSQL_DATABASE=customers
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s

  order:
    image: ms-wks/order-service
    restart: on-failure:10
    depends_on:
      - orderdb
      - catalog
      - customer
    networks:
      - ms-wks
    expose:
     - 8080
    ports:
     - 8083:8080
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s

  orderdb:
    image: mysql:8.0
    # container_name: orderdb
    networks:
      - ms-wks
    environment:
      - MYSQL_ROOT_PASSWORD=dbpass
      - MYSQL_DATABASE=orders
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s

networks:
  ms-wks:
    external:
      name: ms-wks